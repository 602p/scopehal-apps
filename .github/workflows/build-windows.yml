name: Build-windows

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 5'
  workflow_dispatch:

jobs:

  Tarball:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Make Source Tarball
      run: |
        cd ..
        tar -cf source.tar scopehal-apps
        gzip -S .gz -9 source.tar
        mv source.tar.gz scopehal-apps/

    - name: Upload Source
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-source
        path: source.tar.gz

  Windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - uses: msys2/setup-msys2@v2
      with:
        update: true
        msystem: MINGW64
        install: |
          git
          wget
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-toolchain

    - name: Build glslang tags/sdk-1.3.224.1
      run: |
        # Windows mingw64 glslang build (as it is not fully integrated in VulkanSDK-1.3.224.1 for Windows and built with Visual Studio 2017)
        cd ~
        git clone https://github.com/KhronosGroup/glslang.git
        cd glslang
        git checkout tags/sdk-1.3.224.1
        git clone https://github.com/google/googletest.git External/googletest
        cd External/googletest
        git checkout 0c400f67fcf305869c5fb113dd296eca266c9725
        cd ../..
        ./update_glslang_sources.py
        
        SOURCE_DIR=~/glslang
        BUILD_DIR=$SOURCE_DIR/build
        mkdir -p $BUILD_DIR
        cd $BUILD_DIR
        cmake -DCMAKE_BUILD_TYPE=Release -G"MinGW Makefiles" $SOURCE_DIR -DCMAKE_INSTALL_PREFIX="$(pwd)/install"
        cmake --build . --config Release --target install

    - name: Install Vulkan SDK
      run: |
        wget https://sdk.lunarg.com/sdk/download/1.3.224.1/windows/VulkanSDK-1.3.224.1-Installer.exe
        ./VulkanSDK-1.3.224.1-Installer.exe --accept-licenses --default-answer --confirm-command install
        echo "/c/VulkanSDK/1.3.224.1/Bin" >> $GITHUB_PATH
        rm -f VulkanSDK-1.3.224.1-Installer.exe

    - name: Setup Paths and Env for all steps
      run: |
        rm -f ~/.bash_profile
        
        echo "PATH=/c/VulkanSDK/1.3.224.1/Bin:\$PATH" >> ~/.bash_profile
        echo "export VK_SDK_PATH=/c/VulkanSDK/1.3.224.1" >> ~/.bash_profile
        echo "export VULKAN_SDK=/c/VulkanSDK/1.3.224.1" >> ~/.bash_profile
        echo "export GLSLANG_BUILD_PATH=~/glslang/build/install" >> ~/.bash_profile

    - name: Build
      run: |
        cd msys2
        MINGW_ARCH=mingw64 makepkg-mingw --noconfirm --noprogressbar -sCLf

    - name: Test 
      shell: msys2 {0}
      run: |
        pacman -U --noconfirm msys2/*.zst
        glscopeclient --help

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-windows
        path: msys2/*.zst

    - name: Build MSI / portable zip
      shell: msys2 {0}
      run: |
        mkdir build_msi
        cd build_msi
        cmake \
          -G"Ninja" \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_TESTING=OFF \
          -DWIXPATH="/c/Program Files (x86)/WiX Toolset v3.11/bin" \
          ../
        cmake --build ./

    - name: Upload Artifacts (portable zip)
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-windows-portable
        path: build_msi/dist/windows_x64

    - name: Upload Artifacts (MSI)
      uses: actions/upload-artifact@v2
      with:
        name: glscopeclient-windows.msi
        path: build_msi/dist/*.msi
